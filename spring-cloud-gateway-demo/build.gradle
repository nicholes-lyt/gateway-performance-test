buildscript {
    ext {

    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
    mavenCentral()
}

mainClassName = 'com.example.SpringCloudGatewayDemoApplication'
group = 'com.example'
version = '1.0.0'
archivesBaseName = 'spring-cloud-gateway-demo'
description = 'Demo project for Spring Cloud Gateway'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
    implementation("org.springframework.boot:spring-boot-starter-webflux:$springBootVersion")
    implementation "org.springframework.boot:spring-boot-starter-logging:$springBootVersion"
    implementation("org.springframework.cloud:spring-cloud-starter:$springCloudVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-gateway:$springCloudVersion")
    implementation("commons-io:commons-io:$commonsioVersion")
    implementation("org.apache.commons:commons-lang3:$commonslang3Version")
    implementation("commons-beanutils:commons-beanutils:$commonsbeanutilsVersion")
    implementation("commons-codec:commons-codec:$commonscodecVersion")
    implementation("com.google.guava:guava:$guavaVersion")

    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}



